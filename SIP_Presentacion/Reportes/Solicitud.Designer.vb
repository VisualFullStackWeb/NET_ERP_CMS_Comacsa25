'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.9174
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Solicitud"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Solicitud
    Inherits Global.System.Data.DataSet
    
    Private tableDetalleSolicitud As DetalleSolicitudDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DetalleSolicitud")) Is Nothing) Then
                MyBase.Tables.Add(New DetalleSolicitudDataTable(ds.Tables("DetalleSolicitud")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DetalleSolicitud() As DetalleSolicitudDataTable
        Get
            Return Me.tableDetalleSolicitud
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Solicitud = CType(MyBase.Clone,Solicitud)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DetalleSolicitud")) Is Nothing) Then
                MyBase.Tables.Add(New DetalleSolicitudDataTable(ds.Tables("DetalleSolicitud")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDetalleSolicitud = CType(MyBase.Tables("DetalleSolicitud"),DetalleSolicitudDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDetalleSolicitud) Is Nothing) Then
                Me.tableDetalleSolicitud.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "Solicitud"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Solicitud.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDetalleSolicitud = New DetalleSolicitudDataTable
        MyBase.Tables.Add(Me.tableDetalleSolicitud)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDetalleSolicitud() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Solicitud = New Solicitud
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub DetalleSolicitudRowChangeEventHandler(ByVal sender As Object, ByVal e As DetalleSolicitudRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DetalleSolicitudDataTable
        Inherits Global.System.Data.TypedTableBase(Of DetalleSolicitudRow)
        
        Private columnNro_Solicitud As Global.System.Data.DataColumn
        
        Private columniddetalle As Global.System.Data.DataColumn
        
        Private columncodConcepto As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columnmontototal As Global.System.Data.DataColumn
        
        Private columndescripcion As Global.System.Data.DataColumn
        
        Private columncod_moneda As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columnTotal As Global.System.Data.DataColumn
        
        Private columncodtrabajador As Global.System.Data.DataColumn
        
        Private columncodarea As Global.System.Data.DataColumn
        
        Private columnarea As Global.System.Data.DataColumn
        
        Private columnjefeArea As Global.System.Data.DataColumn
        
        Private columnmotivo As Global.System.Data.DataColumn
        
        Private columnfechacrea As Global.System.Data.DataColumn
        
        Private columnfec_limite As Global.System.Data.DataColumn
        
        Private columnnomTrabajador As Global.System.Data.DataColumn
        
        Private columncod_estado As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnTesoreriaAprueba As Global.System.Data.DataColumn
        
        Private columnfechaApruebaTeso As Global.System.Data.DataColumn
        
        Private columnjefaturaAprueba As Global.System.Data.DataColumn
        
        Private columnfechaApruebaJefa As Global.System.Data.DataColumn
        
        Private columncodjefe As Global.System.Data.DataColumn
        
        Private columnusuarioJefe As Global.System.Data.DataColumn
        
        Private columnAprobacionGAF As Global.System.Data.DataColumn
        
        Private columnbeneficiario As Global.System.Data.DataColumn
        
        Private columnnomBanco As Global.System.Data.DataColumn
        
        Private columnnroDNI As Global.System.Data.DataColumn
        
        Private columnnroCuenta As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DetalleSolicitud"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Nro_SolicitudColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNro_Solicitud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property iddetalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniddetalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property montototalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmontototal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cod_monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_moneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codtrabajadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodtrabajador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codareaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property areaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnarea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jefeAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjefeArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property motivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmotivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechacreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechacrea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fec_limiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfec_limite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomTrabajadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomTrabajador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cod_estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_estado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TesoreriaApruebaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTesoreriaAprueba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaApruebaTesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaApruebaTeso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jefaturaApruebaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjefaturaAprueba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaApruebaJefaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaApruebaJefa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codjefeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodjefe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property usuarioJefeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusuarioJefe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AprobacionGAFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAprobacionGAF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property beneficiarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbeneficiario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomBancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomBanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nroDNIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnroDNI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nroCuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnroCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DetalleSolicitudRow
            Get
                Return CType(Me.Rows(index),DetalleSolicitudRow)
            End Get
        End Property
        
        Public Event DetalleSolicitudRowChanging As DetalleSolicitudRowChangeEventHandler
        
        Public Event DetalleSolicitudRowChanged As DetalleSolicitudRowChangeEventHandler
        
        Public Event DetalleSolicitudRowDeleting As DetalleSolicitudRowChangeEventHandler
        
        Public Event DetalleSolicitudRowDeleted As DetalleSolicitudRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDetalleSolicitudRow(ByVal row As DetalleSolicitudRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDetalleSolicitudRow( _
                    ByVal Nro_Solicitud As String,  _
                    ByVal iddetalle As String,  _
                    ByVal codConcepto As String,  _
                    ByVal concepto As String,  _
                    ByVal montototal As Double,  _
                    ByVal descripcion As String,  _
                    ByVal cod_moneda As String,  _
                    ByVal moneda As String,  _
                    ByVal Total As Double,  _
                    ByVal codtrabajador As String,  _
                    ByVal codarea As String,  _
                    ByVal area As String,  _
                    ByVal jefeArea As String,  _
                    ByVal motivo As String,  _
                    ByVal fechacrea As Date,  _
                    ByVal fec_limite As Date,  _
                    ByVal nomTrabajador As String,  _
                    ByVal cod_estado As String,  _
                    ByVal estado As String,  _
                    ByVal TesoreriaAprueba As String,  _
                    ByVal fechaApruebaTeso As Date,  _
                    ByVal jefaturaAprueba As String,  _
                    ByVal fechaApruebaJefa As Date,  _
                    ByVal codjefe As String,  _
                    ByVal usuarioJefe As String,  _
                    ByVal AprobacionGAF As String,  _
                    ByVal beneficiario As String,  _
                    ByVal nomBanco As String,  _
                    ByVal nroDNI As String,  _
                    ByVal nroCuenta As String) As DetalleSolicitudRow
            Dim rowDetalleSolicitudRow As DetalleSolicitudRow = CType(Me.NewRow,DetalleSolicitudRow)
            Dim columnValuesArray() As Object = New Object() {Nro_Solicitud, iddetalle, codConcepto, concepto, montototal, descripcion, cod_moneda, moneda, Total, codtrabajador, codarea, area, jefeArea, motivo, fechacrea, fec_limite, nomTrabajador, cod_estado, estado, TesoreriaAprueba, fechaApruebaTeso, jefaturaAprueba, fechaApruebaJefa, codjefe, usuarioJefe, AprobacionGAF, beneficiario, nomBanco, nroDNI, nroCuenta}
            rowDetalleSolicitudRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDetalleSolicitudRow)
            Return rowDetalleSolicitudRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DetalleSolicitudDataTable = CType(MyBase.Clone,DetalleSolicitudDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DetalleSolicitudDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnNro_Solicitud = MyBase.Columns("Nro_Solicitud")
            Me.columniddetalle = MyBase.Columns("iddetalle")
            Me.columncodConcepto = MyBase.Columns("codConcepto")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columnmontototal = MyBase.Columns("montototal")
            Me.columndescripcion = MyBase.Columns("descripcion")
            Me.columncod_moneda = MyBase.Columns("cod_moneda")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columnTotal = MyBase.Columns("Total")
            Me.columncodtrabajador = MyBase.Columns("codtrabajador")
            Me.columncodarea = MyBase.Columns("codarea")
            Me.columnarea = MyBase.Columns("area")
            Me.columnjefeArea = MyBase.Columns("jefeArea")
            Me.columnmotivo = MyBase.Columns("motivo")
            Me.columnfechacrea = MyBase.Columns("fechacrea")
            Me.columnfec_limite = MyBase.Columns("fec_limite")
            Me.columnnomTrabajador = MyBase.Columns("nomTrabajador")
            Me.columncod_estado = MyBase.Columns("cod_estado")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnTesoreriaAprueba = MyBase.Columns("TesoreriaAprueba")
            Me.columnfechaApruebaTeso = MyBase.Columns("fechaApruebaTeso")
            Me.columnjefaturaAprueba = MyBase.Columns("jefaturaAprueba")
            Me.columnfechaApruebaJefa = MyBase.Columns("fechaApruebaJefa")
            Me.columncodjefe = MyBase.Columns("codjefe")
            Me.columnusuarioJefe = MyBase.Columns("usuarioJefe")
            Me.columnAprobacionGAF = MyBase.Columns("AprobacionGAF")
            Me.columnbeneficiario = MyBase.Columns("beneficiario")
            Me.columnnomBanco = MyBase.Columns("nomBanco")
            Me.columnnroDNI = MyBase.Columns("nroDNI")
            Me.columnnroCuenta = MyBase.Columns("nroCuenta")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnNro_Solicitud = New Global.System.Data.DataColumn("Nro_Solicitud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNro_Solicitud)
            Me.columniddetalle = New Global.System.Data.DataColumn("iddetalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniddetalle)
            Me.columncodConcepto = New Global.System.Data.DataColumn("codConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodConcepto)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columnmontototal = New Global.System.Data.DataColumn("montototal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmontototal)
            Me.columndescripcion = New Global.System.Data.DataColumn("descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescripcion)
            Me.columncod_moneda = New Global.System.Data.DataColumn("cod_moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_moneda)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columnTotal = New Global.System.Data.DataColumn("Total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal)
            Me.columncodtrabajador = New Global.System.Data.DataColumn("codtrabajador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodtrabajador)
            Me.columncodarea = New Global.System.Data.DataColumn("codarea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodarea)
            Me.columnarea = New Global.System.Data.DataColumn("area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnarea)
            Me.columnjefeArea = New Global.System.Data.DataColumn("jefeArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjefeArea)
            Me.columnmotivo = New Global.System.Data.DataColumn("motivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmotivo)
            Me.columnfechacrea = New Global.System.Data.DataColumn("fechacrea", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechacrea)
            Me.columnfec_limite = New Global.System.Data.DataColumn("fec_limite", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfec_limite)
            Me.columnnomTrabajador = New Global.System.Data.DataColumn("nomTrabajador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomTrabajador)
            Me.columncod_estado = New Global.System.Data.DataColumn("cod_estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_estado)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnTesoreriaAprueba = New Global.System.Data.DataColumn("TesoreriaAprueba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTesoreriaAprueba)
            Me.columnfechaApruebaTeso = New Global.System.Data.DataColumn("fechaApruebaTeso", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaApruebaTeso)
            Me.columnjefaturaAprueba = New Global.System.Data.DataColumn("jefaturaAprueba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjefaturaAprueba)
            Me.columnfechaApruebaJefa = New Global.System.Data.DataColumn("fechaApruebaJefa", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaApruebaJefa)
            Me.columncodjefe = New Global.System.Data.DataColumn("codjefe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodjefe)
            Me.columnusuarioJefe = New Global.System.Data.DataColumn("usuarioJefe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusuarioJefe)
            Me.columnAprobacionGAF = New Global.System.Data.DataColumn("AprobacionGAF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAprobacionGAF)
            Me.columnbeneficiario = New Global.System.Data.DataColumn("beneficiario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbeneficiario)
            Me.columnnomBanco = New Global.System.Data.DataColumn("nomBanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomBanco)
            Me.columnnroDNI = New Global.System.Data.DataColumn("nroDNI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnroDNI)
            Me.columnnroCuenta = New Global.System.Data.DataColumn("nroCuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnroCuenta)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDetalleSolicitudRow() As DetalleSolicitudRow
            Return CType(Me.NewRow,DetalleSolicitudRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DetalleSolicitudRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DetalleSolicitudRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DetalleSolicitudRowChangedEvent) Is Nothing) Then
                RaiseEvent DetalleSolicitudRowChanged(Me, New DetalleSolicitudRowChangeEvent(CType(e.Row,DetalleSolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DetalleSolicitudRowChangingEvent) Is Nothing) Then
                RaiseEvent DetalleSolicitudRowChanging(Me, New DetalleSolicitudRowChangeEvent(CType(e.Row,DetalleSolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DetalleSolicitudRowDeletedEvent) Is Nothing) Then
                RaiseEvent DetalleSolicitudRowDeleted(Me, New DetalleSolicitudRowChangeEvent(CType(e.Row,DetalleSolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DetalleSolicitudRowDeletingEvent) Is Nothing) Then
                RaiseEvent DetalleSolicitudRowDeleting(Me, New DetalleSolicitudRowChangeEvent(CType(e.Row,DetalleSolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDetalleSolicitudRow(ByVal row As DetalleSolicitudRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Solicitud = New Solicitud
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DetalleSolicitudDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DetalleSolicitudRow
        Inherits Global.System.Data.DataRow
        
        Private tableDetalleSolicitud As DetalleSolicitudDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDetalleSolicitud = CType(Me.Table,DetalleSolicitudDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Nro_Solicitud() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.Nro_SolicitudColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nro_Solicitud' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.Nro_SolicitudColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iddetalle() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.iddetalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'iddetalle' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.iddetalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.codConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codConcepto' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.codConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.conceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'concepto' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property montototal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.montototalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'montototal' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.montototalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descripcion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.descripcionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'descripcion' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.descripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cod_moneda() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.cod_monedaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_moneda' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.cod_monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property moneda() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.monedaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneda' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Total() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.TotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Total' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.TotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codtrabajador() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.codtrabajadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codtrabajador' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.codtrabajadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codarea() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.codareaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codarea' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.codareaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property area() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.areaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'area' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.areaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jefeArea() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.jefeAreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jefeArea' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.jefeAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property motivo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.motivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'motivo' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.motivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechacrea() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.fechacreaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fechacrea' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.fechacreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fec_limite() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.fec_limiteColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fec_limite' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.fec_limiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomTrabajador() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.nomTrabajadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomTrabajador' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.nomTrabajadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cod_estado() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.cod_estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_estado' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.cod_estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estado' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TesoreriaAprueba() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.TesoreriaApruebaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TesoreriaAprueba' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.TesoreriaApruebaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaApruebaTeso() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.fechaApruebaTesoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fechaApruebaTeso' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.fechaApruebaTesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jefaturaAprueba() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.jefaturaApruebaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jefaturaAprueba' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.jefaturaApruebaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaApruebaJefa() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.fechaApruebaJefaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fechaApruebaJefa' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.fechaApruebaJefaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codjefe() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.codjefeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codjefe' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.codjefeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property usuarioJefe() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.usuarioJefeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'usuarioJefe' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.usuarioJefeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AprobacionGAF() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.AprobacionGAFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AprobacionGAF' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.AprobacionGAFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property beneficiario() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.beneficiarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'beneficiario' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.beneficiarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomBanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.nomBancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomBanco' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.nomBancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nroDNI() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.nroDNIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nroDNI' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.nroDNIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nroCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tableDetalleSolicitud.nroCuentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nroCuenta' in table 'DetalleSolicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDetalleSolicitud.nroCuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNro_SolicitudNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.Nro_SolicitudColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNro_SolicitudNull()
            Me(Me.tableDetalleSolicitud.Nro_SolicitudColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsiddetalleNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.iddetalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetiddetalleNull()
            Me(Me.tableDetalleSolicitud.iddetalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.codConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodConceptoNull()
            Me(Me.tableDetalleSolicitud.codConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsconceptoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.conceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetconceptoNull()
            Me(Me.tableDetalleSolicitud.conceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmontototalNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.montototalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmontototalNull()
            Me(Me.tableDetalleSolicitud.montototalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdescripcionNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.descripcionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdescripcionNull()
            Me(Me.tableDetalleSolicitud.descripcionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscod_monedaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.cod_monedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcod_monedaNull()
            Me(Me.tableDetalleSolicitud.cod_monedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmonedaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.monedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmonedaNull()
            Me(Me.tableDetalleSolicitud.monedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotalNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.TotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotalNull()
            Me(Me.tableDetalleSolicitud.TotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodtrabajadorNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.codtrabajadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodtrabajadorNull()
            Me(Me.tableDetalleSolicitud.codtrabajadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodareaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.codareaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodareaNull()
            Me(Me.tableDetalleSolicitud.codareaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsareaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.areaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetareaNull()
            Me(Me.tableDetalleSolicitud.areaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsjefeAreaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.jefeAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetjefeAreaNull()
            Me(Me.tableDetalleSolicitud.jefeAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmotivoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.motivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmotivoNull()
            Me(Me.tableDetalleSolicitud.motivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechacreaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.fechacreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechacreaNull()
            Me(Me.tableDetalleSolicitud.fechacreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfec_limiteNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.fec_limiteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfec_limiteNull()
            Me(Me.tableDetalleSolicitud.fec_limiteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnomTrabajadorNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.nomTrabajadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnomTrabajadorNull()
            Me(Me.tableDetalleSolicitud.nomTrabajadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscod_estadoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.cod_estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcod_estadoNull()
            Me(Me.tableDetalleSolicitud.cod_estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetestadoNull()
            Me(Me.tableDetalleSolicitud.estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTesoreriaApruebaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.TesoreriaApruebaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTesoreriaApruebaNull()
            Me(Me.tableDetalleSolicitud.TesoreriaApruebaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaApruebaTesoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.fechaApruebaTesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaApruebaTesoNull()
            Me(Me.tableDetalleSolicitud.fechaApruebaTesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsjefaturaApruebaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.jefaturaApruebaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetjefaturaApruebaNull()
            Me(Me.tableDetalleSolicitud.jefaturaApruebaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaApruebaJefaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.fechaApruebaJefaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaApruebaJefaNull()
            Me(Me.tableDetalleSolicitud.fechaApruebaJefaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodjefeNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.codjefeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodjefeNull()
            Me(Me.tableDetalleSolicitud.codjefeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsusuarioJefeNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.usuarioJefeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetusuarioJefeNull()
            Me(Me.tableDetalleSolicitud.usuarioJefeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAprobacionGAFNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.AprobacionGAFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAprobacionGAFNull()
            Me(Me.tableDetalleSolicitud.AprobacionGAFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbeneficiarioNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.beneficiarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbeneficiarioNull()
            Me(Me.tableDetalleSolicitud.beneficiarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnomBancoNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.nomBancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnomBancoNull()
            Me(Me.tableDetalleSolicitud.nomBancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnroDNINull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.nroDNIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnroDNINull()
            Me(Me.tableDetalleSolicitud.nroDNIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnroCuentaNull() As Boolean
            Return Me.IsNull(Me.tableDetalleSolicitud.nroCuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnroCuentaNull()
            Me(Me.tableDetalleSolicitud.nroCuentaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DetalleSolicitudRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DetalleSolicitudRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DetalleSolicitudRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DetalleSolicitudRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
