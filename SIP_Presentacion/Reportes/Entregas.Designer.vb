'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.9174
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Entregas"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Entregas
    Inherits Global.System.Data.DataSet
    
    Private tableRpt_Solicitud As Rpt_SolicitudDataTable
    
    Private tableDt_Liquidacion As Dt_LiquidacionDataTable
    
    Private tableDt_Asiento As Dt_AsientoDataTable
    
    Private tableDt_Compras As Dt_ComprasDataTable
    
    Private tableDt_LiquidacionDet As Dt_LiquidacionDetDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Rpt_Solicitud")) Is Nothing) Then
                MyBase.Tables.Add(New Rpt_SolicitudDataTable(ds.Tables("Rpt_Solicitud")))
            End If
            If (Not (ds.Tables("Dt_Liquidacion")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_LiquidacionDataTable(ds.Tables("Dt_Liquidacion")))
            End If
            If (Not (ds.Tables("Dt_Asiento")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_AsientoDataTable(ds.Tables("Dt_Asiento")))
            End If
            If (Not (ds.Tables("Dt_Compras")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_ComprasDataTable(ds.Tables("Dt_Compras")))
            End If
            If (Not (ds.Tables("Dt_LiquidacionDet")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_LiquidacionDetDataTable(ds.Tables("Dt_LiquidacionDet")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Rpt_Solicitud() As Rpt_SolicitudDataTable
        Get
            Return Me.tableRpt_Solicitud
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_Liquidacion() As Dt_LiquidacionDataTable
        Get
            Return Me.tableDt_Liquidacion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_Asiento() As Dt_AsientoDataTable
        Get
            Return Me.tableDt_Asiento
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_Compras() As Dt_ComprasDataTable
        Get
            Return Me.tableDt_Compras
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_LiquidacionDet() As Dt_LiquidacionDetDataTable
        Get
            Return Me.tableDt_LiquidacionDet
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Entregas = CType(MyBase.Clone,Entregas)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Rpt_Solicitud")) Is Nothing) Then
                MyBase.Tables.Add(New Rpt_SolicitudDataTable(ds.Tables("Rpt_Solicitud")))
            End If
            If (Not (ds.Tables("Dt_Liquidacion")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_LiquidacionDataTable(ds.Tables("Dt_Liquidacion")))
            End If
            If (Not (ds.Tables("Dt_Asiento")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_AsientoDataTable(ds.Tables("Dt_Asiento")))
            End If
            If (Not (ds.Tables("Dt_Compras")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_ComprasDataTable(ds.Tables("Dt_Compras")))
            End If
            If (Not (ds.Tables("Dt_LiquidacionDet")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_LiquidacionDetDataTable(ds.Tables("Dt_LiquidacionDet")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableRpt_Solicitud = CType(MyBase.Tables("Rpt_Solicitud"),Rpt_SolicitudDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRpt_Solicitud) Is Nothing) Then
                Me.tableRpt_Solicitud.InitVars
            End If
        End If
        Me.tableDt_Liquidacion = CType(MyBase.Tables("Dt_Liquidacion"),Dt_LiquidacionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_Liquidacion) Is Nothing) Then
                Me.tableDt_Liquidacion.InitVars
            End If
        End If
        Me.tableDt_Asiento = CType(MyBase.Tables("Dt_Asiento"),Dt_AsientoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_Asiento) Is Nothing) Then
                Me.tableDt_Asiento.InitVars
            End If
        End If
        Me.tableDt_Compras = CType(MyBase.Tables("Dt_Compras"),Dt_ComprasDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_Compras) Is Nothing) Then
                Me.tableDt_Compras.InitVars
            End If
        End If
        Me.tableDt_LiquidacionDet = CType(MyBase.Tables("Dt_LiquidacionDet"),Dt_LiquidacionDetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_LiquidacionDet) Is Nothing) Then
                Me.tableDt_LiquidacionDet.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "Entregas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Entregas.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableRpt_Solicitud = New Rpt_SolicitudDataTable
        MyBase.Tables.Add(Me.tableRpt_Solicitud)
        Me.tableDt_Liquidacion = New Dt_LiquidacionDataTable
        MyBase.Tables.Add(Me.tableDt_Liquidacion)
        Me.tableDt_Asiento = New Dt_AsientoDataTable
        MyBase.Tables.Add(Me.tableDt_Asiento)
        Me.tableDt_Compras = New Dt_ComprasDataTable
        MyBase.Tables.Add(Me.tableDt_Compras)
        Me.tableDt_LiquidacionDet = New Dt_LiquidacionDetDataTable
        MyBase.Tables.Add(Me.tableDt_LiquidacionDet)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeRpt_Solicitud() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_Liquidacion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_Asiento() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_Compras() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_LiquidacionDet() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Entregas = New Entregas
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub Rpt_SolicitudRowChangeEventHandler(ByVal sender As Object, ByVal e As Rpt_SolicitudRowChangeEvent)
    
    Public Delegate Sub Dt_LiquidacionRowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_LiquidacionRowChangeEvent)
    
    Public Delegate Sub Dt_AsientoRowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_AsientoRowChangeEvent)
    
    Public Delegate Sub Dt_ComprasRowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_ComprasRowChangeEvent)
    
    Public Delegate Sub Dt_LiquidacionDetRowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_LiquidacionDetRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Rpt_SolicitudDataTable
        Inherits Global.System.Data.TypedTableBase(Of Rpt_SolicitudRow)
        
        Private columncodTrabajador As Global.System.Data.DataColumn
        
        Private columnnomTrabajador As Global.System.Data.DataColumn
        
        Private columncodArea As Global.System.Data.DataColumn
        
        Private columnArea As Global.System.Data.DataColumn
        
        Private columnjefeArea As Global.System.Data.DataColumn
        
        Private columnMotivo As Global.System.Data.DataColumn
        
        Private columnfecSalida As Global.System.Data.DataColumn
        
        Private columnfecRetorno As Global.System.Data.DataColumn
        
        Private columncodCantera As Global.System.Data.DataColumn
        
        Private columnCantera As Global.System.Data.DataColumn
        
        Private columnRegion As Global.System.Data.DataColumn
        
        Private columncodConcepto As Global.System.Data.DataColumn
        
        Private columnConcepto As Global.System.Data.DataColumn
        
        Private columnmonto As Global.System.Data.DataColumn
        
        Private columndias As Global.System.Data.DataColumn
        
        Private columnmontoTotal As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnnumSolicitud As Global.System.Data.DataColumn
        
        Private columnConcepto2 As Global.System.Data.DataColumn
        
        Private columnmontoTotal2 As Global.System.Data.DataColumn
        
        Private columntipoConcepto As Global.System.Data.DataColumn
        
        Private columnuseraprueba As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columntipodepobeneficiario As Global.System.Data.DataColumn
        
        Private columnbanco As Global.System.Data.DataColumn
        
        Private columnbeneficiario As Global.System.Data.DataColumn
        
        Private columnctabeneficiario As Global.System.Data.DataColumn
        
        Private columnfechaSolicitud As Global.System.Data.DataColumn
        
        Private columnusercreacion As Global.System.Data.DataColumn
        
        Private columnhoracrea As Global.System.Data.DataColumn
        
        Private columnhoraaprueba As Global.System.Data.DataColumn
        
        Private columncargo As Global.System.Data.DataColumn
        
        Private columndni As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Rpt_Solicitud"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codTrabajadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodTrabajador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomTrabajadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomTrabajador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jefeAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjefeArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MotivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecSalidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecSalida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecRetornoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecRetorno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codCanteraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodCantera
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CanteraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantera
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property montoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property montoTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmontoTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numSolicitudColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumSolicitud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Concepto2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcepto2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property montoTotal2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmontoTotal2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userapruebaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseraprueba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipodepobeneficiarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipodepobeneficiario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property beneficiarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbeneficiario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctabeneficiarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctabeneficiario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaSolicitudColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaSolicitud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property usercreacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusercreacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property horacreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhoracrea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property horaapruebaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhoraaprueba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncargo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Rpt_SolicitudRow
            Get
                Return CType(Me.Rows(index),Rpt_SolicitudRow)
            End Get
        End Property
        
        Public Event Rpt_SolicitudRowChanging As Rpt_SolicitudRowChangeEventHandler
        
        Public Event Rpt_SolicitudRowChanged As Rpt_SolicitudRowChangeEventHandler
        
        Public Event Rpt_SolicitudRowDeleting As Rpt_SolicitudRowChangeEventHandler
        
        Public Event Rpt_SolicitudRowDeleted As Rpt_SolicitudRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddRpt_SolicitudRow(ByVal row As Rpt_SolicitudRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddRpt_SolicitudRow( _
                    ByVal codTrabajador As String,  _
                    ByVal nomTrabajador As String,  _
                    ByVal codArea As String,  _
                    ByVal Area As String,  _
                    ByVal jefeArea As String,  _
                    ByVal Motivo As String,  _
                    ByVal fecSalida As String,  _
                    ByVal fecRetorno As String,  _
                    ByVal codCantera As String,  _
                    ByVal Cantera As String,  _
                    ByVal _Region As String,  _
                    ByVal codConcepto As String,  _
                    ByVal Concepto As String,  _
                    ByVal monto As Double,  _
                    ByVal dias As Integer,  _
                    ByVal montoTotal As Double,  _
                    ByVal estado As String,  _
                    ByVal numSolicitud As String,  _
                    ByVal Concepto2 As String,  _
                    ByVal montoTotal2 As Double,  _
                    ByVal tipoConcepto As String,  _
                    ByVal useraprueba As String,  _
                    ByVal moneda As String,  _
                    ByVal tipodepobeneficiario As String,  _
                    ByVal banco As String,  _
                    ByVal beneficiario As String,  _
                    ByVal ctabeneficiario As String,  _
                    ByVal fechaSolicitud As String,  _
                    ByVal usercreacion As String,  _
                    ByVal horacrea As Date,  _
                    ByVal horaaprueba As Date,  _
                    ByVal cargo As String,  _
                    ByVal dni As String) As Rpt_SolicitudRow
            Dim rowRpt_SolicitudRow As Rpt_SolicitudRow = CType(Me.NewRow,Rpt_SolicitudRow)
            Dim columnValuesArray() As Object = New Object() {codTrabajador, nomTrabajador, codArea, Area, jefeArea, Motivo, fecSalida, fecRetorno, codCantera, Cantera, _Region, codConcepto, Concepto, monto, dias, montoTotal, estado, numSolicitud, Concepto2, montoTotal2, tipoConcepto, useraprueba, moneda, tipodepobeneficiario, banco, beneficiario, ctabeneficiario, fechaSolicitud, usercreacion, horacrea, horaaprueba, cargo, dni}
            rowRpt_SolicitudRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRpt_SolicitudRow)
            Return rowRpt_SolicitudRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Rpt_SolicitudDataTable = CType(MyBase.Clone,Rpt_SolicitudDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Rpt_SolicitudDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodTrabajador = MyBase.Columns("codTrabajador")
            Me.columnnomTrabajador = MyBase.Columns("nomTrabajador")
            Me.columncodArea = MyBase.Columns("codArea")
            Me.columnArea = MyBase.Columns("Area")
            Me.columnjefeArea = MyBase.Columns("jefeArea")
            Me.columnMotivo = MyBase.Columns("Motivo")
            Me.columnfecSalida = MyBase.Columns("fecSalida")
            Me.columnfecRetorno = MyBase.Columns("fecRetorno")
            Me.columncodCantera = MyBase.Columns("codCantera")
            Me.columnCantera = MyBase.Columns("Cantera")
            Me.columnRegion = MyBase.Columns("Region")
            Me.columncodConcepto = MyBase.Columns("codConcepto")
            Me.columnConcepto = MyBase.Columns("Concepto")
            Me.columnmonto = MyBase.Columns("monto")
            Me.columndias = MyBase.Columns("dias")
            Me.columnmontoTotal = MyBase.Columns("montoTotal")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnnumSolicitud = MyBase.Columns("numSolicitud")
            Me.columnConcepto2 = MyBase.Columns("Concepto2")
            Me.columnmontoTotal2 = MyBase.Columns("montoTotal2")
            Me.columntipoConcepto = MyBase.Columns("tipoConcepto")
            Me.columnuseraprueba = MyBase.Columns("useraprueba")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columntipodepobeneficiario = MyBase.Columns("tipodepobeneficiario")
            Me.columnbanco = MyBase.Columns("banco")
            Me.columnbeneficiario = MyBase.Columns("beneficiario")
            Me.columnctabeneficiario = MyBase.Columns("ctabeneficiario")
            Me.columnfechaSolicitud = MyBase.Columns("fechaSolicitud")
            Me.columnusercreacion = MyBase.Columns("usercreacion")
            Me.columnhoracrea = MyBase.Columns("horacrea")
            Me.columnhoraaprueba = MyBase.Columns("horaaprueba")
            Me.columncargo = MyBase.Columns("cargo")
            Me.columndni = MyBase.Columns("dni")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodTrabajador = New Global.System.Data.DataColumn("codTrabajador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodTrabajador)
            Me.columnnomTrabajador = New Global.System.Data.DataColumn("nomTrabajador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomTrabajador)
            Me.columncodArea = New Global.System.Data.DataColumn("codArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodArea)
            Me.columnArea = New Global.System.Data.DataColumn("Area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea)
            Me.columnjefeArea = New Global.System.Data.DataColumn("jefeArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjefeArea)
            Me.columnMotivo = New Global.System.Data.DataColumn("Motivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotivo)
            Me.columnfecSalida = New Global.System.Data.DataColumn("fecSalida", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecSalida)
            Me.columnfecRetorno = New Global.System.Data.DataColumn("fecRetorno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecRetorno)
            Me.columncodCantera = New Global.System.Data.DataColumn("codCantera", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodCantera)
            Me.columnCantera = New Global.System.Data.DataColumn("Cantera", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantera)
            Me.columnRegion = New Global.System.Data.DataColumn("Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "RegionColumn")
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnRegion")
            Me.columnRegion.ExtendedProperties.Add("Generator_UserColumnName", "Region")
            MyBase.Columns.Add(Me.columnRegion)
            Me.columncodConcepto = New Global.System.Data.DataColumn("codConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodConcepto)
            Me.columnConcepto = New Global.System.Data.DataColumn("Concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto)
            Me.columnmonto = New Global.System.Data.DataColumn("monto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonto)
            Me.columndias = New Global.System.Data.DataColumn("dias", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndias)
            Me.columnmontoTotal = New Global.System.Data.DataColumn("montoTotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmontoTotal)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnnumSolicitud = New Global.System.Data.DataColumn("numSolicitud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumSolicitud)
            Me.columnConcepto2 = New Global.System.Data.DataColumn("Concepto2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto2)
            Me.columnmontoTotal2 = New Global.System.Data.DataColumn("montoTotal2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmontoTotal2)
            Me.columntipoConcepto = New Global.System.Data.DataColumn("tipoConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoConcepto)
            Me.columnuseraprueba = New Global.System.Data.DataColumn("useraprueba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseraprueba)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columntipodepobeneficiario = New Global.System.Data.DataColumn("tipodepobeneficiario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipodepobeneficiario)
            Me.columnbanco = New Global.System.Data.DataColumn("banco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbanco)
            Me.columnbeneficiario = New Global.System.Data.DataColumn("beneficiario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbeneficiario)
            Me.columnctabeneficiario = New Global.System.Data.DataColumn("ctabeneficiario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctabeneficiario)
            Me.columnfechaSolicitud = New Global.System.Data.DataColumn("fechaSolicitud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaSolicitud)
            Me.columnusercreacion = New Global.System.Data.DataColumn("usercreacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusercreacion)
            Me.columnhoracrea = New Global.System.Data.DataColumn("horacrea", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhoracrea)
            Me.columnhoraaprueba = New Global.System.Data.DataColumn("horaaprueba", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhoraaprueba)
            Me.columncargo = New Global.System.Data.DataColumn("cargo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncargo)
            Me.columndni = New Global.System.Data.DataColumn("dni", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndni)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewRpt_SolicitudRow() As Rpt_SolicitudRow
            Return CType(Me.NewRow,Rpt_SolicitudRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Rpt_SolicitudRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Rpt_SolicitudRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Rpt_SolicitudRowChangedEvent) Is Nothing) Then
                RaiseEvent Rpt_SolicitudRowChanged(Me, New Rpt_SolicitudRowChangeEvent(CType(e.Row,Rpt_SolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Rpt_SolicitudRowChangingEvent) Is Nothing) Then
                RaiseEvent Rpt_SolicitudRowChanging(Me, New Rpt_SolicitudRowChangeEvent(CType(e.Row,Rpt_SolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Rpt_SolicitudRowDeletedEvent) Is Nothing) Then
                RaiseEvent Rpt_SolicitudRowDeleted(Me, New Rpt_SolicitudRowChangeEvent(CType(e.Row,Rpt_SolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Rpt_SolicitudRowDeletingEvent) Is Nothing) Then
                RaiseEvent Rpt_SolicitudRowDeleting(Me, New Rpt_SolicitudRowChangeEvent(CType(e.Row,Rpt_SolicitudRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveRpt_SolicitudRow(ByVal row As Rpt_SolicitudRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Entregas = New Entregas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Rpt_SolicitudDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_LiquidacionDataTable
        Inherits Global.System.Data.TypedTableBase(Of Dt_LiquidacionRow)
        
        Private columnnumSolicitud As Global.System.Data.DataColumn
        
        Private columncodTrabajador As Global.System.Data.DataColumn
        
        Private columnnomTrabajador As Global.System.Data.DataColumn
        
        Private columncodArea As Global.System.Data.DataColumn
        
        Private columnArea As Global.System.Data.DataColumn
        
        Private columnjefeArea As Global.System.Data.DataColumn
        
        Private columnMotivo As Global.System.Data.DataColumn
        
        Private columnfecSalida As Global.System.Data.DataColumn
        
        Private columnfecRetorno As Global.System.Data.DataColumn
        
        Private columntotalDias As Global.System.Data.DataColumn
        
        Private columnCantera As Global.System.Data.DataColumn
        
        Private columnRegion As Global.System.Data.DataColumn
        
        Private columntipoConcepto As Global.System.Data.DataColumn
        
        Private columncodConcepto As Global.System.Data.DataColumn
        
        Private columnConcepto As Global.System.Data.DataColumn
        
        Private columnfechaComp As Global.System.Data.DataColumn
        
        Private columnnroRuc As Global.System.Data.DataColumn
        
        Private columnRazon As Global.System.Data.DataColumn
        
        Private columnnumDocumento As Global.System.Data.DataColumn
        
        Private columntipoDocumento As Global.System.Data.DataColumn
        
        Private columnImporte As Global.System.Data.DataColumn
        
        Private columndescTipoConcepto As Global.System.Data.DataColumn
        
        Private columnImporteSolicitud As Global.System.Data.DataColumn
        
        Private columnAuxiliar As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columncanteraDetalle As Global.System.Data.DataColumn
        
        Private columnnumliquidacion As Global.System.Data.DataColumn
        
        Private columnuseraprueba As Global.System.Data.DataColumn
        
        Private columnctabeneficiario As Global.System.Data.DataColumn
        
        Private columncargo As Global.System.Data.DataColumn
        
        Private columndni As Global.System.Data.DataColumn
        
        Private columnUSERCIERRE As Global.System.Data.DataColumn
        
        Private columnFECHACIERE As Global.System.Data.DataColumn
        
        Private columnUSERREVISION As Global.System.Data.DataColumn
        
        Private columnFECHAREVISION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_Liquidacion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numSolicitudColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumSolicitud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codTrabajadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodTrabajador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomTrabajadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomTrabajador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jefeAreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjefeArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MotivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecSalidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecSalida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecRetornoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecRetorno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalDiasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalDias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CanteraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantera
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RegionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaCompColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaComp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nroRucColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnroRuc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RazonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRazon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoDocumentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoDocumento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImporteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descTipoConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescTipoConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImporteSolicitudColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImporteSolicitud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AuxiliarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuxiliar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property canteraDetalleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncanteraDetalle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numliquidacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumliquidacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property userapruebaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseraprueba
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctabeneficiarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctabeneficiario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cargoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncargo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USERCIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERCIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHACIEREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACIERE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USERREVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSERREVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHAREVISIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAREVISION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_LiquidacionRow
            Get
                Return CType(Me.Rows(index),Dt_LiquidacionRow)
            End Get
        End Property
        
        Public Event Dt_LiquidacionRowChanging As Dt_LiquidacionRowChangeEventHandler
        
        Public Event Dt_LiquidacionRowChanged As Dt_LiquidacionRowChangeEventHandler
        
        Public Event Dt_LiquidacionRowDeleting As Dt_LiquidacionRowChangeEventHandler
        
        Public Event Dt_LiquidacionRowDeleted As Dt_LiquidacionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_LiquidacionRow(ByVal row As Dt_LiquidacionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_LiquidacionRow( _
                    ByVal numSolicitud As String,  _
                    ByVal codTrabajador As String,  _
                    ByVal nomTrabajador As String,  _
                    ByVal codArea As String,  _
                    ByVal Area As String,  _
                    ByVal jefeArea As String,  _
                    ByVal Motivo As String,  _
                    ByVal fecSalida As String,  _
                    ByVal fecRetorno As String,  _
                    ByVal totalDias As String,  _
                    ByVal Cantera As String,  _
                    ByVal _Region As String,  _
                    ByVal tipoConcepto As String,  _
                    ByVal codConcepto As String,  _
                    ByVal Concepto As String,  _
                    ByVal fechaComp As String,  _
                    ByVal nroRuc As String,  _
                    ByVal Razon As String,  _
                    ByVal numDocumento As String,  _
                    ByVal tipoDocumento As String,  _
                    ByVal Importe As Double,  _
                    ByVal descTipoConcepto As String,  _
                    ByVal ImporteSolicitud As Double,  _
                    ByVal Auxiliar As String,  _
                    ByVal moneda As String,  _
                    ByVal canteraDetalle As String,  _
                    ByVal numliquidacion As String,  _
                    ByVal useraprueba As String,  _
                    ByVal ctabeneficiario As String,  _
                    ByVal cargo As String,  _
                    ByVal dni As String,  _
                    ByVal USERCIERRE As String,  _
                    ByVal FECHACIERE As Date,  _
                    ByVal USERREVISION As String,  _
                    ByVal FECHAREVISION As Date) As Dt_LiquidacionRow
            Dim rowDt_LiquidacionRow As Dt_LiquidacionRow = CType(Me.NewRow,Dt_LiquidacionRow)
            Dim columnValuesArray() As Object = New Object() {numSolicitud, codTrabajador, nomTrabajador, codArea, Area, jefeArea, Motivo, fecSalida, fecRetorno, totalDias, Cantera, _Region, tipoConcepto, codConcepto, Concepto, fechaComp, nroRuc, Razon, numDocumento, tipoDocumento, Importe, descTipoConcepto, ImporteSolicitud, Auxiliar, moneda, canteraDetalle, numliquidacion, useraprueba, ctabeneficiario, cargo, dni, USERCIERRE, FECHACIERE, USERREVISION, FECHAREVISION}
            rowDt_LiquidacionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_LiquidacionRow)
            Return rowDt_LiquidacionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_LiquidacionDataTable = CType(MyBase.Clone,Dt_LiquidacionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_LiquidacionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnnumSolicitud = MyBase.Columns("numSolicitud")
            Me.columncodTrabajador = MyBase.Columns("codTrabajador")
            Me.columnnomTrabajador = MyBase.Columns("nomTrabajador")
            Me.columncodArea = MyBase.Columns("codArea")
            Me.columnArea = MyBase.Columns("Area")
            Me.columnjefeArea = MyBase.Columns("jefeArea")
            Me.columnMotivo = MyBase.Columns("Motivo")
            Me.columnfecSalida = MyBase.Columns("fecSalida")
            Me.columnfecRetorno = MyBase.Columns("fecRetorno")
            Me.columntotalDias = MyBase.Columns("totalDias")
            Me.columnCantera = MyBase.Columns("Cantera")
            Me.columnRegion = MyBase.Columns("Region")
            Me.columntipoConcepto = MyBase.Columns("tipoConcepto")
            Me.columncodConcepto = MyBase.Columns("codConcepto")
            Me.columnConcepto = MyBase.Columns("Concepto")
            Me.columnfechaComp = MyBase.Columns("fechaComp")
            Me.columnnroRuc = MyBase.Columns("nroRuc")
            Me.columnRazon = MyBase.Columns("Razon")
            Me.columnnumDocumento = MyBase.Columns("numDocumento")
            Me.columntipoDocumento = MyBase.Columns("tipoDocumento")
            Me.columnImporte = MyBase.Columns("Importe")
            Me.columndescTipoConcepto = MyBase.Columns("descTipoConcepto")
            Me.columnImporteSolicitud = MyBase.Columns("ImporteSolicitud")
            Me.columnAuxiliar = MyBase.Columns("Auxiliar")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columncanteraDetalle = MyBase.Columns("canteraDetalle")
            Me.columnnumliquidacion = MyBase.Columns("numliquidacion")
            Me.columnuseraprueba = MyBase.Columns("useraprueba")
            Me.columnctabeneficiario = MyBase.Columns("ctabeneficiario")
            Me.columncargo = MyBase.Columns("cargo")
            Me.columndni = MyBase.Columns("dni")
            Me.columnUSERCIERRE = MyBase.Columns("USERCIERRE")
            Me.columnFECHACIERE = MyBase.Columns("FECHACIERE")
            Me.columnUSERREVISION = MyBase.Columns("USERREVISION")
            Me.columnFECHAREVISION = MyBase.Columns("FECHAREVISION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnnumSolicitud = New Global.System.Data.DataColumn("numSolicitud", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumSolicitud)
            Me.columncodTrabajador = New Global.System.Data.DataColumn("codTrabajador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodTrabajador)
            Me.columnnomTrabajador = New Global.System.Data.DataColumn("nomTrabajador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomTrabajador)
            Me.columncodArea = New Global.System.Data.DataColumn("codArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodArea)
            Me.columnArea = New Global.System.Data.DataColumn("Area", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea)
            Me.columnjefeArea = New Global.System.Data.DataColumn("jefeArea", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjefeArea)
            Me.columnMotivo = New Global.System.Data.DataColumn("Motivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotivo)
            Me.columnfecSalida = New Global.System.Data.DataColumn("fecSalida", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecSalida)
            Me.columnfecRetorno = New Global.System.Data.DataColumn("fecRetorno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecRetorno)
            Me.columntotalDias = New Global.System.Data.DataColumn("totalDias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalDias)
            Me.columnCantera = New Global.System.Data.DataColumn("Cantera", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantera)
            Me.columnRegion = New Global.System.Data.DataColumn("Region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "RegionColumn")
            Me.columnRegion.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnRegion")
            Me.columnRegion.ExtendedProperties.Add("Generator_UserColumnName", "Region")
            MyBase.Columns.Add(Me.columnRegion)
            Me.columntipoConcepto = New Global.System.Data.DataColumn("tipoConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoConcepto)
            Me.columncodConcepto = New Global.System.Data.DataColumn("codConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodConcepto)
            Me.columnConcepto = New Global.System.Data.DataColumn("Concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcepto)
            Me.columnfechaComp = New Global.System.Data.DataColumn("fechaComp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaComp)
            Me.columnnroRuc = New Global.System.Data.DataColumn("nroRuc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnroRuc)
            Me.columnRazon = New Global.System.Data.DataColumn("Razon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRazon)
            Me.columnnumDocumento = New Global.System.Data.DataColumn("numDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumDocumento)
            Me.columntipoDocumento = New Global.System.Data.DataColumn("tipoDocumento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoDocumento)
            Me.columnImporte = New Global.System.Data.DataColumn("Importe", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporte)
            Me.columndescTipoConcepto = New Global.System.Data.DataColumn("descTipoConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescTipoConcepto)
            Me.columnImporteSolicitud = New Global.System.Data.DataColumn("ImporteSolicitud", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImporteSolicitud)
            Me.columnAuxiliar = New Global.System.Data.DataColumn("Auxiliar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuxiliar)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columncanteraDetalle = New Global.System.Data.DataColumn("canteraDetalle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncanteraDetalle)
            Me.columnnumliquidacion = New Global.System.Data.DataColumn("numliquidacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumliquidacion)
            Me.columnuseraprueba = New Global.System.Data.DataColumn("useraprueba", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseraprueba)
            Me.columnctabeneficiario = New Global.System.Data.DataColumn("ctabeneficiario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctabeneficiario)
            Me.columncargo = New Global.System.Data.DataColumn("cargo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncargo)
            Me.columndni = New Global.System.Data.DataColumn("dni", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndni)
            Me.columnUSERCIERRE = New Global.System.Data.DataColumn("USERCIERRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERCIERRE)
            Me.columnFECHACIERE = New Global.System.Data.DataColumn("FECHACIERE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACIERE)
            Me.columnUSERREVISION = New Global.System.Data.DataColumn("USERREVISION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSERREVISION)
            Me.columnFECHAREVISION = New Global.System.Data.DataColumn("FECHAREVISION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAREVISION)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_LiquidacionRow() As Dt_LiquidacionRow
            Return CType(Me.NewRow,Dt_LiquidacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_LiquidacionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_LiquidacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_LiquidacionRowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionRowChanged(Me, New Dt_LiquidacionRowChangeEvent(CType(e.Row,Dt_LiquidacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_LiquidacionRowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionRowChanging(Me, New Dt_LiquidacionRowChangeEvent(CType(e.Row,Dt_LiquidacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_LiquidacionRowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionRowDeleted(Me, New Dt_LiquidacionRowChangeEvent(CType(e.Row,Dt_LiquidacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_LiquidacionRowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionRowDeleting(Me, New Dt_LiquidacionRowChangeEvent(CType(e.Row,Dt_LiquidacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_LiquidacionRow(ByVal row As Dt_LiquidacionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Entregas = New Entregas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_LiquidacionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_AsientoDataTable
        Inherits Global.System.Data.TypedTableBase(Of Dt_AsientoRow)
        
        Private columnBENEFICIARIO As Global.System.Data.DataColumn
        
        Private columnCOD_CIA As Global.System.Data.DataColumn
        
        Private columnAÑO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnCGVOUCHER As Global.System.Data.DataColumn
        
        Private columnVOUCHERCONTA As Global.System.Data.DataColumn
        
        Private columnDEBE As Global.System.Data.DataColumn
        
        Private columnHABER As Global.System.Data.DataColumn
        
        Private columnCGAUX As Global.System.Data.DataColumn
        
        Private columnCUENTA As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnUSER_C As Global.System.Data.DataColumn
        
        Private columnDOCUMENTO As Global.System.Data.DataColumn
        
        Private columnFECHACONTABLE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_Asiento"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BENEFICIARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBENEFICIARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CGVOUCHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGVOUCHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VOUCHERCONTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOUCHERCONTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CGAUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGAUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USER_CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSER_C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOCUMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCUMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHACONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_AsientoRow
            Get
                Return CType(Me.Rows(index),Dt_AsientoRow)
            End Get
        End Property
        
        Public Event Dt_AsientoRowChanging As Dt_AsientoRowChangeEventHandler
        
        Public Event Dt_AsientoRowChanged As Dt_AsientoRowChangeEventHandler
        
        Public Event Dt_AsientoRowDeleting As Dt_AsientoRowChangeEventHandler
        
        Public Event Dt_AsientoRowDeleted As Dt_AsientoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_AsientoRow(ByVal row As Dt_AsientoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_AsientoRow(ByVal BENEFICIARIO As String, ByVal COD_CIA As String, ByVal AÑO As String, ByVal MES As String, ByVal CGVOUCHER As String, ByVal VOUCHERCONTA As String, ByVal DEBE As Decimal, ByVal HABER As Decimal, ByVal CGAUX As String, ByVal CUENTA As String, ByVal GLOSA As String, ByVal USER_C As String, ByVal DOCUMENTO As String, ByVal FECHACONTABLE As Date) As Dt_AsientoRow
            Dim rowDt_AsientoRow As Dt_AsientoRow = CType(Me.NewRow,Dt_AsientoRow)
            Dim columnValuesArray() As Object = New Object() {BENEFICIARIO, COD_CIA, AÑO, MES, CGVOUCHER, VOUCHERCONTA, DEBE, HABER, CGAUX, CUENTA, GLOSA, USER_C, DOCUMENTO, FECHACONTABLE}
            rowDt_AsientoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_AsientoRow)
            Return rowDt_AsientoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_AsientoDataTable = CType(MyBase.Clone,Dt_AsientoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_AsientoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnBENEFICIARIO = MyBase.Columns("BENEFICIARIO")
            Me.columnCOD_CIA = MyBase.Columns("COD_CIA")
            Me.columnAÑO = MyBase.Columns("AÑO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnCGVOUCHER = MyBase.Columns("CGVOUCHER")
            Me.columnVOUCHERCONTA = MyBase.Columns("VOUCHERCONTA")
            Me.columnDEBE = MyBase.Columns("DEBE")
            Me.columnHABER = MyBase.Columns("HABER")
            Me.columnCGAUX = MyBase.Columns("CGAUX")
            Me.columnCUENTA = MyBase.Columns("CUENTA")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnUSER_C = MyBase.Columns("USER_C")
            Me.columnDOCUMENTO = MyBase.Columns("DOCUMENTO")
            Me.columnFECHACONTABLE = MyBase.Columns("FECHACONTABLE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnBENEFICIARIO = New Global.System.Data.DataColumn("BENEFICIARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBENEFICIARIO)
            Me.columnCOD_CIA = New Global.System.Data.DataColumn("COD_CIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CIA)
            Me.columnAÑO = New Global.System.Data.DataColumn("AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAÑO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnCGVOUCHER = New Global.System.Data.DataColumn("CGVOUCHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGVOUCHER)
            Me.columnVOUCHERCONTA = New Global.System.Data.DataColumn("VOUCHERCONTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOUCHERCONTA)
            Me.columnDEBE = New Global.System.Data.DataColumn("DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE)
            Me.columnHABER = New Global.System.Data.DataColumn("HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER)
            Me.columnCGAUX = New Global.System.Data.DataColumn("CGAUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGAUX)
            Me.columnCUENTA = New Global.System.Data.DataColumn("CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnUSER_C = New Global.System.Data.DataColumn("USER_C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSER_C)
            Me.columnDOCUMENTO = New Global.System.Data.DataColumn("DOCUMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCUMENTO)
            Me.columnFECHACONTABLE = New Global.System.Data.DataColumn("FECHACONTABLE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACONTABLE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_AsientoRow() As Dt_AsientoRow
            Return CType(Me.NewRow,Dt_AsientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_AsientoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_AsientoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_AsientoRowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_AsientoRowChanged(Me, New Dt_AsientoRowChangeEvent(CType(e.Row,Dt_AsientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_AsientoRowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_AsientoRowChanging(Me, New Dt_AsientoRowChangeEvent(CType(e.Row,Dt_AsientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_AsientoRowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_AsientoRowDeleted(Me, New Dt_AsientoRowChangeEvent(CType(e.Row,Dt_AsientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_AsientoRowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_AsientoRowDeleting(Me, New Dt_AsientoRowChangeEvent(CType(e.Row,Dt_AsientoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_AsientoRow(ByVal row As Dt_AsientoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Entregas = New Entregas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_AsientoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_ComprasDataTable
        Inherits Global.System.Data.TypedTableBase(Of Dt_ComprasRow)
        
        Private columnCGVOUCHER As Global.System.Data.DataColumn
        
        Private columnRAZON As Global.System.Data.DataColumn
        
        Private columnRUC As Global.System.Data.DataColumn
        
        Private columnDOCUMENTO As Global.System.Data.DataColumn
        
        Private columnREG_COMP As Global.System.Data.DataColumn
        
        Private columnN_FILE As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnVALOR_REF As Global.System.Data.DataColumn
        
        Private columnVOUCHERCONTA As Global.System.Data.DataColumn
        
        Private columnFECHA_RECE As Global.System.Data.DataColumn
        
        Private columnMONEDA As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnFECHA_PROCESO As Global.System.Data.DataColumn
        
        Private columnFECHA_VTO As Global.System.Data.DataColumn
        
        Private columnTIPOCAMBIO As Global.System.Data.DataColumn
        
        Private columnUSUARIO As Global.System.Data.DataColumn
        
        Private columnCUENTA As Global.System.Data.DataColumn
        
        Private columnAUXILIAR As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnDEBE As Global.System.Data.DataColumn
        
        Private columnHABER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_Compras"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CGVOUCHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGVOUCHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RAZONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAZON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DOCUMENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCUMENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property REG_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREG_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_FILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_FILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VALOR_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VOUCHERCONTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOUCHERCONTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_RECEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_RECE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_PROCESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_PROCESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_VTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_VTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPOCAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOCAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property USUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AUXILIARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUXILIAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_ComprasRow
            Get
                Return CType(Me.Rows(index),Dt_ComprasRow)
            End Get
        End Property
        
        Public Event Dt_ComprasRowChanging As Dt_ComprasRowChangeEventHandler
        
        Public Event Dt_ComprasRowChanged As Dt_ComprasRowChangeEventHandler
        
        Public Event Dt_ComprasRowDeleting As Dt_ComprasRowChangeEventHandler
        
        Public Event Dt_ComprasRowDeleted As Dt_ComprasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_ComprasRow(ByVal row As Dt_ComprasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_ComprasRow( _
                    ByVal CGVOUCHER As String,  _
                    ByVal RAZON As String,  _
                    ByVal RUC As String,  _
                    ByVal DOCUMENTO As String,  _
                    ByVal REG_COMP As String,  _
                    ByVal N_FILE As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal VALOR_REF As Decimal,  _
                    ByVal VOUCHERCONTA As String,  _
                    ByVal FECHA_RECE As Date,  _
                    ByVal MONEDA As String,  _
                    ByVal IMPORTE As Decimal,  _
                    ByVal FECHA_PROCESO As Date,  _
                    ByVal FECHA_VTO As Date,  _
                    ByVal TIPOCAMBIO As Decimal,  _
                    ByVal USUARIO As String,  _
                    ByVal CUENTA As String,  _
                    ByVal AUXILIAR As String,  _
                    ByVal GLOSA As String,  _
                    ByVal DEBE As Decimal,  _
                    ByVal HABER As Decimal) As Dt_ComprasRow
            Dim rowDt_ComprasRow As Dt_ComprasRow = CType(Me.NewRow,Dt_ComprasRow)
            Dim columnValuesArray() As Object = New Object() {CGVOUCHER, RAZON, RUC, DOCUMENTO, REG_COMP, N_FILE, FECHA_DOC, VALOR_REF, VOUCHERCONTA, FECHA_RECE, MONEDA, IMPORTE, FECHA_PROCESO, FECHA_VTO, TIPOCAMBIO, USUARIO, CUENTA, AUXILIAR, GLOSA, DEBE, HABER}
            rowDt_ComprasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_ComprasRow)
            Return rowDt_ComprasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_ComprasDataTable = CType(MyBase.Clone,Dt_ComprasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_ComprasDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCGVOUCHER = MyBase.Columns("CGVOUCHER")
            Me.columnRAZON = MyBase.Columns("RAZON")
            Me.columnRUC = MyBase.Columns("RUC")
            Me.columnDOCUMENTO = MyBase.Columns("DOCUMENTO")
            Me.columnREG_COMP = MyBase.Columns("REG_COMP")
            Me.columnN_FILE = MyBase.Columns("N_FILE")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnVALOR_REF = MyBase.Columns("VALOR_REF")
            Me.columnVOUCHERCONTA = MyBase.Columns("VOUCHERCONTA")
            Me.columnFECHA_RECE = MyBase.Columns("FECHA_RECE")
            Me.columnMONEDA = MyBase.Columns("MONEDA")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnFECHA_PROCESO = MyBase.Columns("FECHA_PROCESO")
            Me.columnFECHA_VTO = MyBase.Columns("FECHA_VTO")
            Me.columnTIPOCAMBIO = MyBase.Columns("TIPOCAMBIO")
            Me.columnUSUARIO = MyBase.Columns("USUARIO")
            Me.columnCUENTA = MyBase.Columns("CUENTA")
            Me.columnAUXILIAR = MyBase.Columns("AUXILIAR")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnDEBE = MyBase.Columns("DEBE")
            Me.columnHABER = MyBase.Columns("HABER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCGVOUCHER = New Global.System.Data.DataColumn("CGVOUCHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGVOUCHER)
            Me.columnRAZON = New Global.System.Data.DataColumn("RAZON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAZON)
            Me.columnRUC = New Global.System.Data.DataColumn("RUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC)
            Me.columnDOCUMENTO = New Global.System.Data.DataColumn("DOCUMENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCUMENTO)
            Me.columnREG_COMP = New Global.System.Data.DataColumn("REG_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREG_COMP)
            Me.columnN_FILE = New Global.System.Data.DataColumn("N_FILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_FILE)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnVALOR_REF = New Global.System.Data.DataColumn("VALOR_REF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR_REF)
            Me.columnVOUCHERCONTA = New Global.System.Data.DataColumn("VOUCHERCONTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOUCHERCONTA)
            Me.columnFECHA_RECE = New Global.System.Data.DataColumn("FECHA_RECE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_RECE)
            Me.columnMONEDA = New Global.System.Data.DataColumn("MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONEDA)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnFECHA_PROCESO = New Global.System.Data.DataColumn("FECHA_PROCESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_PROCESO)
            Me.columnFECHA_VTO = New Global.System.Data.DataColumn("FECHA_VTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_VTO)
            Me.columnTIPOCAMBIO = New Global.System.Data.DataColumn("TIPOCAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOCAMBIO)
            Me.columnUSUARIO = New Global.System.Data.DataColumn("USUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUARIO)
            Me.columnCUENTA = New Global.System.Data.DataColumn("CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUENTA)
            Me.columnAUXILIAR = New Global.System.Data.DataColumn("AUXILIAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUXILIAR)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnDEBE = New Global.System.Data.DataColumn("DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE)
            Me.columnHABER = New Global.System.Data.DataColumn("HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_ComprasRow() As Dt_ComprasRow
            Return CType(Me.NewRow,Dt_ComprasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_ComprasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_ComprasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_ComprasRowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_ComprasRowChanged(Me, New Dt_ComprasRowChangeEvent(CType(e.Row,Dt_ComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_ComprasRowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_ComprasRowChanging(Me, New Dt_ComprasRowChangeEvent(CType(e.Row,Dt_ComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_ComprasRowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_ComprasRowDeleted(Me, New Dt_ComprasRowChangeEvent(CType(e.Row,Dt_ComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_ComprasRowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_ComprasRowDeleting(Me, New Dt_ComprasRowChangeEvent(CType(e.Row,Dt_ComprasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_ComprasRow(ByVal row As Dt_ComprasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Entregas = New Entregas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_ComprasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_LiquidacionDetDataTable
        Inherits Global.System.Data.TypedTableBase(Of Dt_LiquidacionDetRow)
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columnalimentos As Global.System.Data.DataColumn
        
        Private columnhospedaje As Global.System.Data.DataColumn
        
        Private columnmovilidad As Global.System.Data.DataColumn
        
        Private columncombustible As Global.System.Data.DataColumn
        
        Private columnpeaje As Global.System.Data.DataColumn
        
        Private columnotros As Global.System.Data.DataColumn
        
        Private columnsubtotal As Global.System.Data.DataColumn
        
        Private columnpasajes As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_LiquidacionDet"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property alimentosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnalimentos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hospedajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhospedaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property movilidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmovilidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property combustibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncombustible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property peajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpeaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property otrosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnotros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property subtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pasajesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpasajes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_LiquidacionDetRow
            Get
                Return CType(Me.Rows(index),Dt_LiquidacionDetRow)
            End Get
        End Property
        
        Public Event Dt_LiquidacionDetRowChanging As Dt_LiquidacionDetRowChangeEventHandler
        
        Public Event Dt_LiquidacionDetRowChanged As Dt_LiquidacionDetRowChangeEventHandler
        
        Public Event Dt_LiquidacionDetRowDeleting As Dt_LiquidacionDetRowChangeEventHandler
        
        Public Event Dt_LiquidacionDetRowDeleted As Dt_LiquidacionDetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_LiquidacionDetRow(ByVal row As Dt_LiquidacionDetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_LiquidacionDetRow(ByVal fecha As Date, ByVal alimentos As Decimal, ByVal hospedaje As Decimal, ByVal movilidad As Decimal, ByVal combustible As Decimal, ByVal peaje As Decimal, ByVal otros As Decimal, ByVal subtotal As Decimal, ByVal pasajes As Decimal) As Dt_LiquidacionDetRow
            Dim rowDt_LiquidacionDetRow As Dt_LiquidacionDetRow = CType(Me.NewRow,Dt_LiquidacionDetRow)
            Dim columnValuesArray() As Object = New Object() {fecha, alimentos, hospedaje, movilidad, combustible, peaje, otros, subtotal, pasajes}
            rowDt_LiquidacionDetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_LiquidacionDetRow)
            Return rowDt_LiquidacionDetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_LiquidacionDetDataTable = CType(MyBase.Clone,Dt_LiquidacionDetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_LiquidacionDetDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columnalimentos = MyBase.Columns("alimentos")
            Me.columnhospedaje = MyBase.Columns("hospedaje")
            Me.columnmovilidad = MyBase.Columns("movilidad")
            Me.columncombustible = MyBase.Columns("combustible")
            Me.columnpeaje = MyBase.Columns("peaje")
            Me.columnotros = MyBase.Columns("otros")
            Me.columnsubtotal = MyBase.Columns("subtotal")
            Me.columnpasajes = MyBase.Columns("pasajes")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columnalimentos = New Global.System.Data.DataColumn("alimentos", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnalimentos)
            Me.columnhospedaje = New Global.System.Data.DataColumn("hospedaje", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhospedaje)
            Me.columnmovilidad = New Global.System.Data.DataColumn("movilidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmovilidad)
            Me.columncombustible = New Global.System.Data.DataColumn("combustible", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncombustible)
            Me.columnpeaje = New Global.System.Data.DataColumn("peaje", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpeaje)
            Me.columnotros = New Global.System.Data.DataColumn("otros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnotros)
            Me.columnsubtotal = New Global.System.Data.DataColumn("subtotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubtotal)
            Me.columnpasajes = New Global.System.Data.DataColumn("pasajes", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpasajes)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_LiquidacionDetRow() As Dt_LiquidacionDetRow
            Return CType(Me.NewRow,Dt_LiquidacionDetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_LiquidacionDetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_LiquidacionDetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_LiquidacionDetRowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionDetRowChanged(Me, New Dt_LiquidacionDetRowChangeEvent(CType(e.Row,Dt_LiquidacionDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_LiquidacionDetRowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionDetRowChanging(Me, New Dt_LiquidacionDetRowChangeEvent(CType(e.Row,Dt_LiquidacionDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_LiquidacionDetRowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionDetRowDeleted(Me, New Dt_LiquidacionDetRowChangeEvent(CType(e.Row,Dt_LiquidacionDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_LiquidacionDetRowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_LiquidacionDetRowDeleting(Me, New Dt_LiquidacionDetRowChangeEvent(CType(e.Row,Dt_LiquidacionDetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_LiquidacionDetRow(ByVal row As Dt_LiquidacionDetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As Entregas = New Entregas
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_LiquidacionDetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Rpt_SolicitudRow
        Inherits Global.System.Data.DataRow
        
        Private tableRpt_Solicitud As Rpt_SolicitudDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRpt_Solicitud = CType(Me.Table,Rpt_SolicitudDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codTrabajador() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.codTrabajadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codTrabajador' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.codTrabajadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomTrabajador() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.nomTrabajadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomTrabajador' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.nomTrabajadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codArea() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.codAreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codArea' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.codAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Area() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.AreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jefeArea() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.jefeAreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jefeArea' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.jefeAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Motivo() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.MotivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Motivo' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.MotivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecSalida() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.fecSalidaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fecSalida' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.fecSalidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecRetorno() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.fecRetornoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fecRetorno' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.fecRetornoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codCantera() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.codCanteraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codCantera' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.codCanteraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cantera() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.CanteraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cantera' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.CanteraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Region' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.codConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codConcepto' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.codConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Concepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.ConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concepto' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.ConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property monto() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.montoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'monto' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.montoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dias() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.diasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dias' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.diasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property montoTotal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.montoTotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'montoTotal' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.montoTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.estadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estado' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numSolicitud() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.numSolicitudColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'numSolicitud' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.numSolicitudColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Concepto2() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.Concepto2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concepto2' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.Concepto2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property montoTotal2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.montoTotal2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'montoTotal2' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.montoTotal2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipoConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.tipoConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tipoConcepto' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.tipoConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property useraprueba() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.userapruebaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useraprueba' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.userapruebaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property moneda() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.monedaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneda' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipodepobeneficiario() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.tipodepobeneficiarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tipodepobeneficiario' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.tipodepobeneficiarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property banco() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.bancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'banco' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.bancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property beneficiario() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.beneficiarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'beneficiario' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.beneficiarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctabeneficiario() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.ctabeneficiarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ctabeneficiario' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.ctabeneficiarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaSolicitud() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.fechaSolicitudColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fechaSolicitud' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.fechaSolicitudColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property usercreacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.usercreacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'usercreacion' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.usercreacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property horacrea() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.horacreaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'horacrea' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.horacreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property horaaprueba() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.horaapruebaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'horaaprueba' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.horaapruebaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cargo() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.cargoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cargo' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.cargoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dni() As String
            Get
                Try 
                    Return CType(Me(Me.tableRpt_Solicitud.dniColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dni' in table 'Rpt_Solicitud' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRpt_Solicitud.dniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodTrabajadorNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.codTrabajadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodTrabajadorNull()
            Me(Me.tableRpt_Solicitud.codTrabajadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnomTrabajadorNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.nomTrabajadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnomTrabajadorNull()
            Me(Me.tableRpt_Solicitud.nomTrabajadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodAreaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.codAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodAreaNull()
            Me(Me.tableRpt_Solicitud.codAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAreaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAreaNull()
            Me(Me.tableRpt_Solicitud.AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsjefeAreaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.jefeAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetjefeAreaNull()
            Me(Me.tableRpt_Solicitud.jefeAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMotivoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.MotivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMotivoNull()
            Me(Me.tableRpt_Solicitud.MotivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfecSalidaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.fecSalidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfecSalidaNull()
            Me(Me.tableRpt_Solicitud.fecSalidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfecRetornoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.fecRetornoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfecRetornoNull()
            Me(Me.tableRpt_Solicitud.fecRetornoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodCanteraNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.codCanteraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodCanteraNull()
            Me(Me.tableRpt_Solicitud.codCanteraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCanteraNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.CanteraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCanteraNull()
            Me(Me.tableRpt_Solicitud.CanteraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_RegionNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_RegionNull()
            Me(Me.tableRpt_Solicitud.RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodConceptoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.codConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodConceptoNull()
            Me(Me.tableRpt_Solicitud.codConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.ConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConceptoNull()
            Me(Me.tableRpt_Solicitud.ConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmontoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.montoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmontoNull()
            Me(Me.tableRpt_Solicitud.montoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdiasNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.diasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdiasNull()
            Me(Me.tableRpt_Solicitud.diasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmontoTotalNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.montoTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmontoTotalNull()
            Me(Me.tableRpt_Solicitud.montoTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsestadoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.estadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetestadoNull()
            Me(Me.tableRpt_Solicitud.estadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnumSolicitudNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.numSolicitudColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnumSolicitudNull()
            Me(Me.tableRpt_Solicitud.numSolicitudColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConcepto2Null() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.Concepto2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConcepto2Null()
            Me(Me.tableRpt_Solicitud.Concepto2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmontoTotal2Null() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.montoTotal2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmontoTotal2Null()
            Me(Me.tableRpt_Solicitud.montoTotal2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstipoConceptoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.tipoConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettipoConceptoNull()
            Me(Me.tableRpt_Solicitud.tipoConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserapruebaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.userapruebaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserapruebaNull()
            Me(Me.tableRpt_Solicitud.userapruebaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmonedaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.monedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmonedaNull()
            Me(Me.tableRpt_Solicitud.monedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstipodepobeneficiarioNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.tipodepobeneficiarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettipodepobeneficiarioNull()
            Me(Me.tableRpt_Solicitud.tipodepobeneficiarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbancoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.bancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbancoNull()
            Me(Me.tableRpt_Solicitud.bancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbeneficiarioNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.beneficiarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbeneficiarioNull()
            Me(Me.tableRpt_Solicitud.beneficiarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctabeneficiarioNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.ctabeneficiarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctabeneficiarioNull()
            Me(Me.tableRpt_Solicitud.ctabeneficiarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaSolicitudNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.fechaSolicitudColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaSolicitudNull()
            Me(Me.tableRpt_Solicitud.fechaSolicitudColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsusercreacionNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.usercreacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetusercreacionNull()
            Me(Me.tableRpt_Solicitud.usercreacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshoracreaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.horacreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethoracreaNull()
            Me(Me.tableRpt_Solicitud.horacreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshoraapruebaNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.horaapruebaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethoraapruebaNull()
            Me(Me.tableRpt_Solicitud.horaapruebaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscargoNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.cargoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcargoNull()
            Me(Me.tableRpt_Solicitud.cargoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdniNull() As Boolean
            Return Me.IsNull(Me.tableRpt_Solicitud.dniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdniNull()
            Me(Me.tableRpt_Solicitud.dniColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_LiquidacionRow
        Inherits Global.System.Data.DataRow
        
        Private tableDt_Liquidacion As Dt_LiquidacionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_Liquidacion = CType(Me.Table,Dt_LiquidacionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numSolicitud() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.numSolicitudColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'numSolicitud' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.numSolicitudColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codTrabajador() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.codTrabajadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codTrabajador' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.codTrabajadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomTrabajador() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.nomTrabajadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nomTrabajador' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.nomTrabajadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codArea() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.codAreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codArea' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.codAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Area() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.AreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jefeArea() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.jefeAreaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jefeArea' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.jefeAreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Motivo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.MotivoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Motivo' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.MotivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecSalida() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.fecSalidaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fecSalida' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.fecSalidaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecRetorno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.fecRetornoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fecRetorno' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.fecRetornoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property totalDias() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.totalDiasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalDias' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.totalDiasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cantera() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.CanteraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cantera' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.CanteraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Region() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.RegionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Region' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.RegionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipoConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.tipoConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tipoConcepto' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.tipoConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.codConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'codConcepto' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.codConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Concepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.ConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concepto' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.ConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaComp() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.fechaCompColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fechaComp' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.fechaCompColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nroRuc() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.nroRucColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nroRuc' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.nroRucColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Razon() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.RazonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Razon' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.RazonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numDocumento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.numDocumentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'numDocumento' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.numDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipoDocumento() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.tipoDocumentoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tipoDocumento' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.tipoDocumentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Importe() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.ImporteColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Importe' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.ImporteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descTipoConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.descTipoConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'descTipoConcepto' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.descTipoConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ImporteSolicitud() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.ImporteSolicitudColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImporteSolicitud' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.ImporteSolicitudColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Auxiliar() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.AuxiliarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Auxiliar' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.AuxiliarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property moneda() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.monedaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneda' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property canteraDetalle() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.canteraDetalleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'canteraDetalle' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.canteraDetalleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numliquidacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.numliquidacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'numliquidacion' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.numliquidacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property useraprueba() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.userapruebaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useraprueba' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.userapruebaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctabeneficiario() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.ctabeneficiarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ctabeneficiario' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.ctabeneficiarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cargo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.cargoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cargo' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.cargoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dni() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.dniColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dni' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.dniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USERCIERRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.USERCIERREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USERCIERRE' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.USERCIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHACIERE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.FECHACIEREColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACIERE' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.FECHACIEREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USERREVISION() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.USERREVISIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USERREVISION' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.USERREVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHAREVISION() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Liquidacion.FECHAREVISIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAREVISION' in table 'Dt_Liquidacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Liquidacion.FECHAREVISIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnumSolicitudNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.numSolicitudColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnumSolicitudNull()
            Me(Me.tableDt_Liquidacion.numSolicitudColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodTrabajadorNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.codTrabajadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodTrabajadorNull()
            Me(Me.tableDt_Liquidacion.codTrabajadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnomTrabajadorNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.nomTrabajadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnomTrabajadorNull()
            Me(Me.tableDt_Liquidacion.nomTrabajadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodAreaNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.codAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodAreaNull()
            Me(Me.tableDt_Liquidacion.codAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAreaNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAreaNull()
            Me(Me.tableDt_Liquidacion.AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsjefeAreaNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.jefeAreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetjefeAreaNull()
            Me(Me.tableDt_Liquidacion.jefeAreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMotivoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.MotivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMotivoNull()
            Me(Me.tableDt_Liquidacion.MotivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfecSalidaNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.fecSalidaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfecSalidaNull()
            Me(Me.tableDt_Liquidacion.fecSalidaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfecRetornoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.fecRetornoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfecRetornoNull()
            Me(Me.tableDt_Liquidacion.fecRetornoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstotalDiasNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.totalDiasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettotalDiasNull()
            Me(Me.tableDt_Liquidacion.totalDiasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCanteraNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.CanteraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCanteraNull()
            Me(Me.tableDt_Liquidacion.CanteraColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_RegionNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.RegionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_RegionNull()
            Me(Me.tableDt_Liquidacion.RegionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstipoConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.tipoConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettipoConceptoNull()
            Me(Me.tableDt_Liquidacion.tipoConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscodConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.codConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcodConceptoNull()
            Me(Me.tableDt_Liquidacion.codConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.ConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConceptoNull()
            Me(Me.tableDt_Liquidacion.ConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaCompNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.fechaCompColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaCompNull()
            Me(Me.tableDt_Liquidacion.fechaCompColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnroRucNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.nroRucColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnroRucNull()
            Me(Me.tableDt_Liquidacion.nroRucColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRazonNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.RazonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRazonNull()
            Me(Me.tableDt_Liquidacion.RazonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnumDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.numDocumentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnumDocumentoNull()
            Me(Me.tableDt_Liquidacion.numDocumentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstipoDocumentoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.tipoDocumentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettipoDocumentoNull()
            Me(Me.tableDt_Liquidacion.tipoDocumentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImporteNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.ImporteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImporteNull()
            Me(Me.tableDt_Liquidacion.ImporteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdescTipoConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.descTipoConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdescTipoConceptoNull()
            Me(Me.tableDt_Liquidacion.descTipoConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImporteSolicitudNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.ImporteSolicitudColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImporteSolicitudNull()
            Me(Me.tableDt_Liquidacion.ImporteSolicitudColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAuxiliarNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.AuxiliarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAuxiliarNull()
            Me(Me.tableDt_Liquidacion.AuxiliarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmonedaNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.monedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmonedaNull()
            Me(Me.tableDt_Liquidacion.monedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscanteraDetalleNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.canteraDetalleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcanteraDetalleNull()
            Me(Me.tableDt_Liquidacion.canteraDetalleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnumliquidacionNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.numliquidacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnumliquidacionNull()
            Me(Me.tableDt_Liquidacion.numliquidacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuserapruebaNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.userapruebaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetuserapruebaNull()
            Me(Me.tableDt_Liquidacion.userapruebaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsctabeneficiarioNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.ctabeneficiarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetctabeneficiarioNull()
            Me(Me.tableDt_Liquidacion.ctabeneficiarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscargoNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.cargoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcargoNull()
            Me(Me.tableDt_Liquidacion.cargoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdniNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.dniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdniNull()
            Me(Me.tableDt_Liquidacion.dniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSERCIERRENull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.USERCIERREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSERCIERRENull()
            Me(Me.tableDt_Liquidacion.USERCIERREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHACIERENull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.FECHACIEREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHACIERENull()
            Me(Me.tableDt_Liquidacion.FECHACIEREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSERREVISIONNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.USERREVISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSERREVISIONNull()
            Me(Me.tableDt_Liquidacion.USERREVISIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHAREVISIONNull() As Boolean
            Return Me.IsNull(Me.tableDt_Liquidacion.FECHAREVISIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHAREVISIONNull()
            Me(Me.tableDt_Liquidacion.FECHAREVISIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_AsientoRow
        Inherits Global.System.Data.DataRow
        
        Private tableDt_Asiento As Dt_AsientoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_Asiento = CType(Me.Table,Dt_AsientoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BENEFICIARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.BENEFICIARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BENEFICIARIO' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.BENEFICIARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.COD_CIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COD_CIA' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.COD_CIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AÑO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.AÑOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AÑO' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MES() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.MESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MES' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CGVOUCHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.CGVOUCHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CGVOUCHER' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.CGVOUCHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VOUCHERCONTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.VOUCHERCONTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOUCHERCONTA' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.VOUCHERCONTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEBE' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HABER' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CGAUX() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.CGAUXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CGAUX' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.CGAUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUENTA' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GLOSA' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USER_C() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.USER_CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USER_C' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.USER_CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOCUMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.DOCUMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCUMENTO' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.DOCUMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHACONTABLE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Asiento.FECHACONTABLEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACONTABLE' in table 'Dt_Asiento' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Asiento.FECHACONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBENEFICIARIONull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.BENEFICIARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBENEFICIARIONull()
            Me(Me.tableDt_Asiento.BENEFICIARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CIANull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.COD_CIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CIANull()
            Me(Me.tableDt_Asiento.COD_CIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAÑONull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.AÑOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAÑONull()
            Me(Me.tableDt_Asiento.AÑOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMESNull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.MESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMESNull()
            Me(Me.tableDt_Asiento.MESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCGVOUCHERNull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.CGVOUCHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCGVOUCHERNull()
            Me(Me.tableDt_Asiento.CGVOUCHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVOUCHERCONTANull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.VOUCHERCONTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVOUCHERCONTANull()
            Me(Me.tableDt_Asiento.VOUCHERCONTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBENull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBENull()
            Me(Me.tableDt_Asiento.DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABERNull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABERNull()
            Me(Me.tableDt_Asiento.HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCGAUXNull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.CGAUXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCGAUXNull()
            Me(Me.tableDt_Asiento.CGAUXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUENTANull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUENTANull()
            Me(Me.tableDt_Asiento.CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableDt_Asiento.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSER_CNull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.USER_CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSER_CNull()
            Me(Me.tableDt_Asiento.USER_CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOCUMENTONull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.DOCUMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOCUMENTONull()
            Me(Me.tableDt_Asiento.DOCUMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHACONTABLENull() As Boolean
            Return Me.IsNull(Me.tableDt_Asiento.FECHACONTABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHACONTABLENull()
            Me(Me.tableDt_Asiento.FECHACONTABLEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_ComprasRow
        Inherits Global.System.Data.DataRow
        
        Private tableDt_Compras As Dt_ComprasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_Compras = CType(Me.Table,Dt_ComprasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CGVOUCHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.CGVOUCHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CGVOUCHER' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.CGVOUCHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RAZON() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.RAZONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RAZON' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.RAZONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RUC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.RUCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RUC' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.RUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DOCUMENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.DOCUMENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCUMENTO' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.DOCUMENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property REG_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.REG_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REG_COMP' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.REG_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_FILE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.N_FILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_FILE' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.N_FILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_DOC' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VALOR_REF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.VALOR_REFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALOR_REF' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.VALOR_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VOUCHERCONTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.VOUCHERCONTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOUCHERCONTA' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.VOUCHERCONTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_RECE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.FECHA_RECEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_RECE' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.FECHA_RECEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MONEDA' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_PROCESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.FECHA_PROCESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_PROCESO' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.FECHA_PROCESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_VTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.FECHA_VTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA_VTO' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.FECHA_VTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPOCAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.TIPOCAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOCAMBIO' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.TIPOCAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property USUARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.USUARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USUARIO' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.USUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUENTA' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AUXILIAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.AUXILIARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUXILIAR' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.AUXILIARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GLOSA' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEBE' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_Compras.HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HABER' in table 'Dt_Compras' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_Compras.HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCGVOUCHERNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.CGVOUCHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCGVOUCHERNull()
            Me(Me.tableDt_Compras.CGVOUCHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRAZONNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.RAZONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRAZONNull()
            Me(Me.tableDt_Compras.RAZONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRUCNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.RUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRUCNull()
            Me(Me.tableDt_Compras.RUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDOCUMENTONull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.DOCUMENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDOCUMENTONull()
            Me(Me.tableDt_Compras.DOCUMENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsREG_COMPNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.REG_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetREG_COMPNull()
            Me(Me.tableDt_Compras.REG_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_FILENull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.N_FILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_FILENull()
            Me(Me.tableDt_Compras.N_FILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableDt_Compras.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVALOR_REFNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.VALOR_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVALOR_REFNull()
            Me(Me.tableDt_Compras.VALOR_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVOUCHERCONTANull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.VOUCHERCONTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVOUCHERCONTANull()
            Me(Me.tableDt_Compras.VOUCHERCONTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_RECENull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.FECHA_RECEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_RECENull()
            Me(Me.tableDt_Compras.FECHA_RECEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMONEDANull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMONEDANull()
            Me(Me.tableDt_Compras.MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableDt_Compras.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_PROCESONull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.FECHA_PROCESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_PROCESONull()
            Me(Me.tableDt_Compras.FECHA_PROCESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_VTONull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.FECHA_VTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_VTONull()
            Me(Me.tableDt_Compras.FECHA_VTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPOCAMBIONull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.TIPOCAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPOCAMBIONull()
            Me(Me.tableDt_Compras.TIPOCAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.USUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUSUARIONull()
            Me(Me.tableDt_Compras.USUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCUENTANull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCUENTANull()
            Me(Me.tableDt_Compras.CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAUXILIARNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.AUXILIARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAUXILIARNull()
            Me(Me.tableDt_Compras.AUXILIARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableDt_Compras.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBENull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBENull()
            Me(Me.tableDt_Compras.DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABERNull() As Boolean
            Return Me.IsNull(Me.tableDt_Compras.HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABERNull()
            Me(Me.tableDt_Compras.HABERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_LiquidacionDetRow
        Inherits Global.System.Data.DataRow
        
        Private tableDt_LiquidacionDet As Dt_LiquidacionDetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_LiquidacionDet = CType(Me.Table,Dt_LiquidacionDetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.fechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fecha' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property alimentos() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.alimentosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'alimentos' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.alimentosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hospedaje() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.hospedajeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hospedaje' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.hospedajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property movilidad() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.movilidadColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'movilidad' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.movilidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property combustible() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.combustibleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'combustible' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.combustibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property peaje() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.peajeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'peaje' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.peajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property otros() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.otrosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'otros' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.otrosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property subtotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.subtotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subtotal' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.subtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pasajes() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_LiquidacionDet.pasajesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pasajes' in table 'Dt_LiquidacionDet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_LiquidacionDet.pasajesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfechaNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.fechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfechaNull()
            Me(Me.tableDt_LiquidacionDet.fechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsalimentosNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.alimentosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetalimentosNull()
            Me(Me.tableDt_LiquidacionDet.alimentosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshospedajeNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.hospedajeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethospedajeNull()
            Me(Me.tableDt_LiquidacionDet.hospedajeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsmovilidadNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.movilidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetmovilidadNull()
            Me(Me.tableDt_LiquidacionDet.movilidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscombustibleNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.combustibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcombustibleNull()
            Me(Me.tableDt_LiquidacionDet.combustibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspeajeNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.peajeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpeajeNull()
            Me(Me.tableDt_LiquidacionDet.peajeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsotrosNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.otrosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetotrosNull()
            Me(Me.tableDt_LiquidacionDet.otrosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssubtotalNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.subtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsubtotalNull()
            Me(Me.tableDt_LiquidacionDet.subtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IspasajesNull() As Boolean
            Return Me.IsNull(Me.tableDt_LiquidacionDet.pasajesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetpasajesNull()
            Me(Me.tableDt_LiquidacionDet.pasajesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Rpt_SolicitudRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Rpt_SolicitudRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Rpt_SolicitudRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Rpt_SolicitudRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_LiquidacionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_LiquidacionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_LiquidacionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_LiquidacionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_AsientoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_AsientoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_AsientoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_AsientoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_ComprasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_ComprasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_ComprasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_ComprasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_LiquidacionDetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_LiquidacionDetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_LiquidacionDetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_LiquidacionDetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
