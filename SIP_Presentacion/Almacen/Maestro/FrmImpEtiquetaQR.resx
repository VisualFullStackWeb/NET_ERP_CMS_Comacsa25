<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Appearance5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>